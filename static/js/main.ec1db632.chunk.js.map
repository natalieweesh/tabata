{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["exercises","arms","title","img","character","bodyweight","unilateral","legs","butt","back","core","formatTime","seconds","mins","Math","floor","secs","scrollDown","window","scroll","scrollY","speak","words","timeout","setTimeout","responsiveVoice","randomPhrase","work","workPhrases","restPhrases","phrases","random","length","App","timer","useRef","currentIntervalCount","currentRound","resting","useState","paused","setPaused","finished","setFinished","theTime","setTheTime","exerciseIndex","currentExercise","startedWorkout","setStartedWorkout","workTime","setWorkTime","restTime","setRestTime","totalTime","setTotalTime","selectedMuscleGroups","setSelectedMuscleGroups","rounds","showPreview","setShowPreview","showFAQ","setShowFAQ","bodyweightOnly","setBodyweightOnly","fullScreenable","document","fullscreenEnabled","exerciseRandomizer","useEffect","clearTimeout","current","arrays","Object","keys","map","muscleGroup","template","i","push","selector","generateExerciseRandomizer","currentMuscleGroup","randomi","idx","slice","concat","newIndex","newMuscleGroup","className","onClick","documentElement","requestFullscreen","onChange","e","parseInt","target","value","muscle","key","htmlFor","includes","filter","x","checked","id","type","toUpperCase","style","width","src","alt","isOn","enable","disable","exercise","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec1db632.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ReactNoSleep from 'react-no-sleep';\nimport './App.css';\n\nconst exercises = {\n  arms: [\n    {\n      title: 'bicep curl',\n      img: 'https://media.giphy.com/media/UV4Yi70OhwQ6JwJo7m/giphy.gif',\n      character: 'meeseeks'\n    },\n    {\n      title: 'skull crusher',\n      img: 'https://media.giphy.com/media/MdjZSDee0C50ZuYlHa/giphy.gif',\n      character: 'tina'\n    },\n    {\n      title: 'curl + press',\n      img: 'https://media.giphy.com/media/Lq1ERaOKq2LEuK7xd1/giphy.gif',\n      character: 'spongebob'\n    },\n    {\n      title: 'hammer curl',\n      img: 'https://media.giphy.com/media/izaYkYoJMnY07WYFzj/giphy.gif',\n      character: 'meeseeks'\n    },\n    {\n      title: 'pike pushup',\n      img: 'https://media.giphy.com/media/eLYEh1IRtaP7oApdCo/giphy.gif',\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'tricep dip',\n      img: 'https://media.giphy.com/media/W3emLNQKTecUA1POxp/giphy.gif',\n      character: 'spongebob',\n      bodyweight: true\n    },\n    {\n      title: 'tricep pushup',\n      img: 'https://media.giphy.com/media/KehD7SA2RF4gqHQP8r/giphy.gif',\n      character: 'meeseeks',\n      bodyweight: true\n    },\n    {\n      title: 'shoulder press',\n      img: 'https://media.giphy.com/media/SUtRTnS36VFpC12IrT/giphy.gif',\n      character: 'tina'\n    },\n    {\n      title: 'tricep kickback',\n      img: 'https://media.giphy.com/media/fvfoHSsvAeUVrrNc33/giphy.gif',\n      character: 'meeseeks'\n    },\n    {\n      title: 'plank tricep extension',\n      img: 'https://media.giphy.com/media/lQCdZTKL8NbiU4OViv/giphy.gif',\n      character: 'bob',\n      bodyweight: true\n    },\n    {\n      title: 'chest fly',\n      img: 'https://media.giphy.com/media/LOXDvvmMvnk33n12pC/giphy.gif',\n      character: 'tina'\n    },\n    {\n      title: 'pullover',\n      img: 'https://media.giphy.com/media/Lo03vYJTNH6ouIRr4V/giphy.gif',\n      character: 'bmo'\n    },\n    {\n      title: 'chest press',\n      img: 'https://media.giphy.com/media/d8FZU70Rkj1LGIImBB/giphy.gif',\n      character: 'tina'\n    },\n    {\n      title: 'burpee',\n      img: 'https://media.giphy.com/media/RlrSX7HvlDddz4Qmcc/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'reverse fly',\n      img: 'https://media.giphy.com/media/kfvD2clhN8AaM7P4L5/giphy.gif',\n      character: 'tina'\n    },\n    {\n      title: 'fly rotation',\n      img: 'https://media.giphy.com/media/Y0UMEAVeLtIAgmOuZA/giphy.gif',\n      character: 'bmo'\n    },\n    {\n      title: 'wide grip pushup',\n      img: 'https://media.giphy.com/media/iFt57qzEXZisX6JcZ7/giphy.gif',\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'power snatch',\n      img: 'https://media.giphy.com/media/eLv4iOPVrSI0PoNA1Z/giphy.gif',\n      character: 'prince',\n      unilateral: true\n    }\n  ],\n  legs: [\n    {\n      title: 'jumping jack',\n      img: 'https://media.giphy.com/media/lNWbCKbffqCIzY8RR1/giphy.gif',\n      character: 'poopybutthole',\n      bodyweight: true\n    },\n    {\n      title: 'calf raise',\n      img: 'https://media.giphy.com/media/QyhLeRDWoIusTLMyNk/giphy.gif',\n      character: 'bmo',\n      bodyweight: true\n    },\n    {\n      title: 'squat',\n      img: 'https://media.giphy.com/media/XEZsDl0zybBbwJQV07/giphy.gif',\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'reverse lunge',\n      img: 'https://media.giphy.com/media/QWR3SDoEL6ggzL9rub/giphy.gif',\n      character: 'meeseeks',\n      bodyweight: true,\n      unilateral: true\n    },\n    {\n      title: 'jumprope',\n      img: 'https://media.giphy.com/media/Y1jNTxApOQRfKOJt8k/giphy.gif',\n      character: 'bmo',\n      bodyweight: true\n    },\n    {\n      title: 'bulgarian split squat',\n      img: 'https://media.giphy.com/media/YqhMwl3nSuA2Dr3i5v/giphy.gif',\n      unilateral: true,\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'squat jump',\n      img: 'https://media.giphy.com/media/dWsKZW6A3PdJnKROMl/giphy.gif',\n      character: 'meeseeks',\n      bodyweight: true\n    },\n    {\n      title: 'squat to kneel',\n      img: 'https://media.giphy.com/media/ZbN2PwMLD0boIjJrrn/giphy.gif',\n      character: 'bmo',\n      bodyweight: true\n    }\n  ],\n  butt: [\n    {\n      title: 'squat to leg raise',\n      img: 'https://media.giphy.com/media/SwNf4vey9bnBLRypko/giphy.gif',\n      character: 'bmo',\n      bodyweight: true,\n      unilateral: true\n    },\n    {\n      title: 'glute kick back',\n      img: 'https://media.giphy.com/media/JPy2RNHCXbbLGw59pV/giphy.gif',\n      unilateral: true,\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'glute bridge',\n      img: 'https://media.giphy.com/media/cKKAg0wrGRYENJiUei/giphy.gif',\n      character: 'poopybutthole',\n      bodyweight: true\n    },\n    {\n      title: 'deadlift',\n      img: 'https://media.giphy.com/media/Yqz7ZokQ0kCs8uaN9E/giphy.gif',\n      character: 'meeseeks'\n    },\n    {\n      title: 'glute bridge march',\n      img: 'https://media.giphy.com/media/KZTBAKLnPVrpTuYag8/giphy.gif',\n      character: 'bob',\n      bodyweight: true\n    },\n    {\n      title: 'fire hydrant',\n      img: 'https://media.giphy.com/media/YMY5NMCtfOBJXGAtXY/giphy.gif',\n      unilateral: true,\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'sumo squat',\n      img: 'https://media.giphy.com/media/emGfboB1RYoSodN7XG/giphy.gif',\n      character: 'meeseeks',\n      bodyweight: true\n    },\n    {\n      title: 'glute bridge walk out',\n      img: 'https://media.giphy.com/media/cir6FkDe7MXgmffNcd/giphy.gif',\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'lunge to knee raise',\n      img: 'https://media.giphy.com/media/YqnrLFFt8KVfJ7Y09Q/giphy.gif',\n      character: 'bmo',\n      unilateral: true,\n      bodyweight: true\n    },\n    {\n      title: 'squat to side crunch',\n      img: 'https://media.giphy.com/media/QvRsGfbid6t6YTp6bi/giphy.gif',\n      character: 'bob',\n      unilateral: true,\n      bodyweight: true\n    },\n    {\n      title: 'single leg deadlift',\n      img: 'https://media.giphy.com/media/YmhQcV7p3jabLZJZSt/giphy.gif',\n      character: 'prince',\n      unilateral: true,\n      bodyweight: true\n    },\n  ],\n  back: [\n    {\n      title: 'plank row',\n      img: 'https://media.giphy.com/media/l4M6n87ScoBRUrjMBD/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'superman',\n      img: 'https://media.giphy.com/media/lTArkNAXA1Dk9b4PsX/giphy.gif',\n      character: 'poopybutthole',\n      bodyweight: true\n    },\n    {\n      title: 'prone lat pulldown',\n      img: 'https://media.giphy.com/media/ZeKvP6fl0ZV63RlV8E/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'upright row',\n      img: 'https://media.giphy.com/media/h7tvdrSjSzmB3XUPgH/giphy.gif',\n      character: 'tina'\n    },\n\n    {\n      title: 'reverse snow angel',\n      img: 'https://media.giphy.com/media/kzqvH8IO3cXqDEVT1y/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'i-t-y',\n      img: 'https://media.giphy.com/media/Wp0gT1ibDsmUU5KmHm/giphy.gif',\n      character: 'meeseeks'\n    },\n    {\n      title: 'crab walk',\n      img: 'https://media.giphy.com/media/jqGmd9gmGxDPXby3wc/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'row to tricep kickback',\n      img: 'https://media.giphy.com/media/fqbSg8AqQ09t09RYsY/giphy.gif',\n      unilateral: true,\n      character: 'bmo'\n    },\n    {\n      title: 'posterior plank',\n      img: 'https://media.giphy.com/media/Rkn765eSFkmJTS4Npe/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'row',\n      img: 'https://media.giphy.com/media/cmg3rpWI915jERDeYY/giphy.gif',\n      character: 'tina'\n    },\n    {\n      title: 'bird dog crunch',\n      img: 'https://media.giphy.com/media/eKCrBlcoEx2yIJFjPT/giphy.gif',\n      character: 'prince',\n      unilateral: true,\n      bodyweight: true\n    },\n    {\n      title: 'good morning',\n      img: 'https://media.giphy.com/media/UUngOy2VaiPCYrh2uq/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'plank reach to down dog toe touch',\n      img: 'https://media.giphy.com/media/L3WFDllHa0UJxS6Lyj/giphy.gif',\n      character: 'prince',\n      bodyweight: true,\n      unilateral: true\n    }\n  ],\n  core: [\n    {\n      title: 'commando',\n      img: 'https://media.giphy.com/media/XeMer2mEKQauNA6ISm/giphy.gif',\n      character: 'bob',\n      bodyweight: true\n    },\n    {\n      title: 'crab toe touch',\n      img: 'https://media.giphy.com/media/JUejec6cI22RSbM62j/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'bicycle crunch',\n      img: 'https://media.giphy.com/media/cKmbHxWIQrs5x4k6ur/giphy.gif',\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'plank jack',\n      img: 'https://media.giphy.com/media/kegbiTdPMMqUzWb4ub/giphy.gif',\n      character: 'meeseeks',\n      bodyweight: true\n    },\n    {\n      title: 'standing side crunch',\n      img: 'https://media.giphy.com/media/Q8a7nGMti3uuCFHfF5/giphy.gif',\n      unilateral: true,\n      character: 'tina'\n    },\n    {\n      title: 'plank shoulder tap',\n      img: 'https://media.giphy.com/media/ejCVKLqCrppg2TpFgp/giphy.gif',\n      character: 'bob',\n      bodyweight: true\n    },\n    {\n      title: 'side plank',\n      img: 'https://media.giphy.com/media/jq0G0EmNEGYyfhENhA/giphy.gif',\n      unilateral: true,\n      character: 'bmo',\n      bodyweight: true\n    },\n    {\n      title: 'bear plank',\n      img: 'https://media.giphy.com/media/dscqPpbt6z16WJSvkc/giphy.gif',\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'dead bug',\n      img: 'https://media.giphy.com/media/Ib19iaeZvif1be0rbL/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'mountain climber',\n      img: 'https://media.giphy.com/media/W35qtGrrpweU00eLwI/giphy.gif',\n      character: 'meeseeks',\n      bodyweight: true\n    },\n    {\n      title: 'sit up',\n      img: 'https://media.giphy.com/media/TiCqf0dCsS0UiSLWqd/giphy.gif',\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'russian twist',\n      img: 'https://media.giphy.com/media/jt3y986EVb6L1woQS6/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'forearm plank',\n      img: 'https://media.giphy.com/media/hXO58SRA8RSj2cfgge/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'plank',\n      img: 'https://media.giphy.com/media/J2rGWkLU7IS5D2Us7f/giphy.gif',\n      character: 'bmo',\n      bodyweight: true\n    },\n    {\n      title: 'crunch',\n      img: 'https://media.giphy.com/media/J5dtNyZYvFIFFC1fUV/giphy.gif',\n      character: 'tina',\n      bodyweight: true\n    },\n    {\n      title: 'toe touch',\n      img: 'https://media.giphy.com/media/UoeJ3obguCjCR4nisU/giphy.gif',\n      character: 'prince',\n      bodyweight: true\n    },\n    {\n      title: 'forearm plank knee to elbow',\n      img: 'https://media.giphy.com/media/elhRhEtr2uYqXuDUfW/giphy.gif',\n      character: 'bob',\n      bodyweight: true,\n      unilateral: true\n    }\n  ]\n}\n\nconst formatTime = (seconds) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = seconds % 60;\n  return `${mins < 10 ? \"0\" : \"\"}${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`\n}\n\nconst scrollDown = () => {\n  window.scroll(0, window.scrollY + 300);\n}\n\nconst speak = (words, timeout = 0) => {\n  setTimeout(() => {\n    window.responsiveVoice.speak(words)\n  }, timeout)\n}\n\nconst randomPhrase = (work = false) => {\n  const workPhrases = ['time to work', 'get to it', 'go go go', \"let's get it done\", 'begin', \"ok go\", 'go for it'];\n  const restPhrases = ['take a break', 'and rest', 'break time', 'take a breather', 'and stop', 'and break'];\n  const phrases = work ? workPhrases : restPhrases;\n  return phrases[Math.floor(Math.random() * phrases.length)]\n}\n\nfunction App() {\n  const timer = useRef(null);\n  const currentIntervalCount = useRef(3);\n  const currentRound = useRef(0);\n  const resting = useRef(true);\n  const [paused, setPaused] = useState(true);\n  const [finished, setFinished] = useState(false);\n  const [theTime, setTheTime] = useState(0);\n  const exerciseIndex = useRef(0);\n  const currentExercise = useRef(null);\n  const [startedWorkout, setStartedWorkout] = useState(false);\n  const [workTime, setWorkTime] = useState(20)\n  const [restTime, setRestTime] = useState(10)\n  const [totalTime, setTotalTime] = useState(1200)\n  const [selectedMuscleGroups, setSelectedMuscleGroups] = useState(['arms', 'legs', 'butt', 'back', 'core'])\n  const rounds = useRef(null)\n  const [showPreview, setShowPreview] = useState(false);\n  const [showFAQ, setShowFAQ] = useState(false);\n  const [bodyweightOnly, setBodyweightOnly] = useState(false);\n  const fullScreenable = document.fullscreenEnabled;\n  let exerciseRandomizer = useRef(null);\n\n  const generateExerciseRandomizer = () => {\n    const arrays = {}\n    Object.keys(exercises).map((muscleGroup) => {\n      let template = []\n      for (let i = 0; i < exercises[muscleGroup].length; i++) {\n        if (!bodyweightOnly || (bodyweightOnly && exercises[muscleGroup][i]['bodyweight'])) {\n          template.push(i);\n        }\n      }\n      arrays[muscleGroup] = {\n        template: template,\n        selector: template\n      }\n    })\n    exerciseRandomizer.current = arrays;\n  }\n\n  useEffect(() => {\n    if (paused || finished) {\n      clearTimeout(timer.current);\n      if (finished) {\n        currentExercise.current = null;\n      }\n      return;\n    }\n    if (!selectedMuscleGroups || selectedMuscleGroups.length === 0) {\n      setSelectedMuscleGroups(['arms', 'legs', 'butt', 'back', 'core']) // if they selected no muscle groups use them all\n      return;\n    }\n    if (!rounds.current) {\n      rounds.current = Math.floor(totalTime / (workTime + restTime))\n    }\n    if (!currentExercise.current) { // starting the first exercise of the workout\n      generateExerciseRandomizer();\n      const currentMuscleGroup = selectedMuscleGroups[exerciseIndex.current];\n      if (exerciseRandomizer.current[currentMuscleGroup]['selector'].length === 0) {\n        exerciseRandomizer.current[currentMuscleGroup]['selector'] = exerciseRandomizer.current[currentMuscleGroup]['template']\n      }\n      if (exerciseRandomizer.current[currentMuscleGroup]['selector'].length > 0) {\n        let randomi = Math.floor(Math.random() * exerciseRandomizer.current[currentMuscleGroup]['selector'].length)\n        let idx = exerciseRandomizer.current[currentMuscleGroup]['selector'][randomi]\n        currentExercise.current = exercises[currentMuscleGroup][idx]\n        exerciseRandomizer.current[currentMuscleGroup]['selector'] = exerciseRandomizer.current[currentMuscleGroup]['selector'].slice(0, randomi).concat(exerciseRandomizer.current[currentMuscleGroup]['selector'].slice(randomi+1))\n      }\n      currentIntervalCount.current = restTime;\n      speak(`let's do this! first exercise is ${currentExercise.current['title']}`)\n    }\n    timer.current = setTimeout(() => {\n      setTheTime(theTime + 1)\n      if (currentRound.current * (workTime + restTime) + restTime === theTime + 1) { // start work (after rest is done)\n        resting.current = false;\n        currentIntervalCount.current = workTime\n        speak(randomPhrase(true), 1000)\n      } else if (theTime + 1 === (rounds.current) * (workTime + restTime)) { // finished with whole workout\n        setFinished(true);\n        speak(\"good job! workout complete! it's peanut butter jelly time\")\n        return;\n      } else if ((currentRound.current + 1) * (workTime + restTime) === theTime + 1) { // start next round, start new exercise\n        resting.current = true;\n        currentRound.current = currentRound.current + 1\n        const newIndex = ((exerciseIndex.current + 1) % (selectedMuscleGroups.length))\n        exerciseIndex.current = newIndex;\n        const newMuscleGroup = selectedMuscleGroups[newIndex]\n        if (exerciseRandomizer.current[newMuscleGroup]['selector'].length === 0) {\n          exerciseRandomizer.current[newMuscleGroup]['selector'] = exerciseRandomizer.current[newMuscleGroup]['template']\n        }\n        if (exerciseRandomizer.current[newMuscleGroup]['selector'].length > 0) {\n          let randomi = Math.floor(Math.random() * exerciseRandomizer.current[newMuscleGroup]['selector'].length)\n          let idx = exerciseRandomizer.current[newMuscleGroup]['selector'][randomi]\n          currentExercise.current = exercises[newMuscleGroup][idx]\n          exerciseRandomizer.current[newMuscleGroup]['selector'] = exerciseRandomizer.current[newMuscleGroup]['selector'].slice(0, randomi).concat(exerciseRandomizer.current[newMuscleGroup]['selector'].slice(randomi+1))\n        }\n        currentIntervalCount.current = restTime\n        speak(`${randomPhrase()}. ${currentExercise.current['title']} is next`, 1000)\n      } else {\n        if (currentExercise.current['unilateral'] && !resting.current && currentIntervalCount.current === Math.floor(workTime / 2)) {\n          speak('switch sides');\n        }\n        if (currentIntervalCount.current - 1 >= 0) {\n          currentIntervalCount.current = currentIntervalCount.current - 1\n        }\n      }\n    }, 1000)\n  }, [paused, restTime, totalTime, workTime, theTime, finished, selectedMuscleGroups])\n  return (\n    <div className=\"App\">\n    {fullScreenable && <button className='fullscreenButton restText' onClick={() => {\n        document.documentElement.requestFullscreen();\n      }}>Fullscreen mode</button>\n    }\n      {!startedWorkout && <p className=\"exerciseTitle pageTitle\">It's tabata time!</p>}\n      {!startedWorkout &&\n      <div className=\"settingsRow\">\n        <div className=\"row\">\n          <div className=\"column\">\n            <label>Choose your work time:</label>\n            <select className=\"select-css\" onChange={e => {\n              setWorkTime(parseInt(e.target.value))\n            }} value={workTime}>\n              <option value=\"5\">5 seconds</option>\n              <option value=\"20\">20 seconds</option>\n              <option value=\"30\">30 seconds</option>\n              <option value=\"45\">45 seconds</option>\n              <option value=\"50\">50 seoncds</option>\n              <option value=\"60\">60 seconds</option>\n            </select>\n          </div>\n          <div className=\"column\">\n            <label>Choose your rest time:</label>\n            <select className=\"select-css\" onChange={e => setRestTime(parseInt(e.target.value))} value={restTime}>\n              <option value=\"3\">3 seconds</option>\n              <option value=\"10\">10 seconds</option>\n              <option value=\"15\">15 seconds</option>\n              <option value=\"20\">20 seconds</option>\n              <option value=\"25\">25 seconds</option>\n              <option value=\"30\">30 seconds</option>\n            </select>\n          </div>\n          <div className=\"column\">\n            <label>Choose your total workout duration:</label>\n            <select className=\"select-css\" onChange={e => setTotalTime(parseInt(e.target.value))} value={totalTime}>\n              <option value=\"30\">30 seconds</option>\n              <option value=\"60\">1 minute</option>\n              <option value=\"300\">5 minutes</option>\n              <option value=\"600\">10 minutes</option>\n              <option value=\"900\">15 minutes</option>\n              <option value=\"1200\">20 minutes</option>\n              <option value=\"1500\">25 minutes</option>\n              <option value=\"1800\">30 minutes</option>\n            </select>\n          </div>\n        </div>\n        <div>\n          <div className=\"row muscleRowTitle\">\n            <label>Select the muscle groups to focus on:</label>\n          </div>\n          <div className=\"row muscleRow\">\n              {Object.keys(exercises).map(muscle => {\n                return <div className=\"checkboxWrapper\" key={muscle}>\n                  <label className=\"checkboxLabel\" htmlFor={muscle}>{muscle === 'arms' ? 'ARMS + CHEST' : 'ARMS'}</label><input onChange={() => {\n                    if (selectedMuscleGroups.includes(muscle)) {\n                      setSelectedMuscleGroups(selectedMuscleGroups.filter(x => x !== muscle))\n                    } else {\n                      setSelectedMuscleGroups(selectedMuscleGroups.concat([muscle]))\n                    }\n                  }} checked={selectedMuscleGroups.includes(muscle)} id={muscle} value={muscle} type=\"checkbox\"/><div className=\"fakeCheckbox\">{muscle === 'arms' ? 'ARMS + CHEST' : muscle.toUpperCase()}</div>\n                </div>\n              })}\n          </div>\n        </div>\n        <div>\n          <div className=\"row\">\n            <label>Do you want bodyweight exercises only? (Best option if you don't have dumbbells)</label>\n          </div>\n          <div className=\"row muscleRow\">\n            <div className=\"checkboxWrapper\"><label className=\"checkboxLabel\" htmlFor='bodyweight'>BODYWEIGHT ONLY</label><input onChange={() => {\n              setBodyweightOnly(!bodyweightOnly);\n            }} checked={bodyweightOnly} id='bodyweight' value='Bodyweight only' type=\"checkbox\"/><div className=\"fakeCheckbox\">BODYWEIGHT ONLY</div></div>\n          </div>\n        </div>\n      </div>\n      }\n\n      {currentExercise.current && !finished && (\n        <div>\n          <div className=\"row progressRow\">\n            <div className=\"progressBar\"><div className=\"fill\" style={{width: `${parseInt(theTime / ((restTime + workTime) * rounds.current) * 100)}%`}}></div></div>\n          </div>\n          <div className={resting.current ? 'restText row mainRow' : 'workText row mainRow'}>\n            <div className=\"column bigger\">\n              <p className=\"exerciseTitle\">{currentExercise.current && currentExercise.current['title']}</p>\n              <img src={currentExercise.current && currentExercise.current['img']} alt={currentExercise.current && currentExercise.current['title']} />\n              <p>[work your {selectedMuscleGroups[exerciseIndex.current] === 'arms' ? 'arms / chest' : selectedMuscleGroups[exerciseIndex.current]}]</p>\n            </div>\n            <div className=\"column smaller\">\n              <div className='centerize'>\n                <p className='countdownTitle'>{resting.current ? \"REST\" : \"WORK\"}</p>\n                <p className=\"countdown\">{currentIntervalCount.current >= 0 ? currentIntervalCount.current : \"\"}</p>\n              </div>\n          </div>\n        </div>\n          <div className=\"row\">\n            <div className=\"column\">\n              <p>Time elapsed: {formatTime(theTime)}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {!currentExercise.current && startedWorkout && <div><div className=\"row progressRow\">\n            <div className=\"progressBar\"><div className=\"fill\" style={{width: `${parseInt(theTime / ((restTime + workTime) * rounds.current) * 100)}%`}}></div></div>\n          </div><div className=\"row restText mainRow\"><p className=\"exerciseTitle centerize\">Let's get ready to rumble...</p></div></div>}\n\n      {finished && <div>\n        <p className=\"exerciseTitle\">YOU FINISHED!</p>\n        <img src=\"https://media.giphy.com/media/ZY8BVlXHZqMal62QS3/giphy.gif\" alt=\"it's peanut butter jelly time\" />\n        <p>Total workout time: {formatTime(theTime)}</p>\n        <p>Total rounds finished: {currentRound.current + 1}</p>\n      </div>}\n\n      {!finished &&\n      <div className=\"row\">\n        <ReactNoSleep className=\"fulscreenButton\">\n          {({ isOn, enable, disable }) => (\n            <button onClick={() => {\n              setPaused(!paused)\n              if (!startedWorkout) {\n                setStartedWorkout(true);\n              }\n              if (!isOn) {\n                enable();\n              }\n            }} className={startedWorkout && !paused ? 'unpausedButton' : ''}>{!startedWorkout ? (\"START\") : (paused ? \"UNPAUSE\" : \"PAUSE\")}</button>\n          )}\n        </ReactNoSleep>\n        {!startedWorkout && <button className=\"previewButton\" onClick={() => {\n          setShowPreview(!showPreview)\n          setShowFAQ(false)\n          if (!showPreview) setTimeout(scrollDown, 200)\n        }}>{showPreview ? 'Hide the exercises' : 'Preview the exercises'}</button>}\n        <button className=\"previewButton\" onClick={() => {\n          setShowFAQ(!showFAQ);\n          setShowPreview(false)\n          if (!showFAQ) setTimeout(scrollDown, 200)\n        }}>{showFAQ ? 'Hide FAQ' : 'FAQ'}</button>\n      </div>\n      }\n      \n      {showPreview && !startedWorkout &&\n        <div className=\"row\">\n          {Object.keys(exercises).map(muscle => {\n            return <div>\n              <p className=\"exerciseTitle\">exercises for your {muscle === 'arms' ? 'arms + chest' : muscle}:</p>\n              <div className=\"row previewRow\">\n              {exercises[muscle].map(exercise => {\n                return <div className=\"column\"><p>{exercise['title']}</p><div className=\"previewImageWrapper\">{exercise['bodyweight'] && <div className='bodyweightBanner'>Bodyweight</div>}<img src={exercise['img']} alt={exercise['title']}/></div></div>\n              })}\n              </div>\n            </div>\n          })}\n        </div>\n      }\n\n      {showFAQ && <div className=\"row previewRow faq\">\n        <p><strong>What the squanch is tabata?</strong><br/>Tabata is a type of HIIT workout where you exercise for 20 seconds, rest for 10 seconds, then repeat until your heart falls out.</p>\n        \n        <p><strong>Who are your trainers?</strong><br/>Mr. Poopybutthole, Mr. Meeseeks, Tina Belcher, Spongebob Squarepants, and BMO are some of our distinguished trainers who will be working out with you today. Please note that their form while doing exercises is not always 100% on point so don't hurt yourself trying to copy them exactly.</p>\n        <p><strong>How does this all work?</strong><br/>Once you pick your preferred work time, rest time, and total workout duration, you can choose the muscle groups you want to focus on for your workout. Then the workout will cycle through each muscle group with a different random exercise each time until your total workout time runs out. Let's get schwifty!</p>\n        <p><strong>Who lives in a pineapple under the sea?</strong><br/>Spongebob Squarepants</p>\n      </div>}\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}